name: Build

on:
  push:
    branches: [master]

jobs:
  macos:
    runs-on: macOS-latest

    strategy:
      matrix:
        run-config:
          - { scheme: 'NanoTest_macOS - Debug',   destination: 'generic/platform=macOS' }
          - { scheme: 'NanoTest_macOS - Release', destination: 'generic/platform=macOS' }
#          - { scheme: 'NanoTest_iOS - Debug',     destination: 'generic/platform=iOS' }
#          - { scheme: 'NanoTest_iOS - Release',   destination: 'generic/platform=iOS' }
#          - { scheme: 'NanoTest_tvOS - Debug',    destination: 'generic/platform=tvOS' }
#          - { scheme: 'NanoTest_tvOS - Release',  destination: 'generic/platform=tvOS' }

    steps:
      - name: Show Files1
        run: ls -l

      - name: Checkout Project
        uses: actions/checkout@v2

      - name: Show Files2
        run: ls -l

      - name: Build Project
        run: xcodebuild build -project NanoTest/Project/NanoTest.xcodeproj -scheme '${{ matrix.run-config['scheme'] }}' -destination '${{ matrix.run-config['destination'] }}' -enableAddressSanitizer YES -enableUndefinedBehaviorSanitizer YES

      - name: Run Tests
        run: env

      - name: Run Tests
        run: ls -l "$GITHUB_WORKSPACE"




  linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Project
        uses: actions/checkout@v2

      - name: Prepare Build
        run: |
          ls -l
          mkdir "${GITHUB_WORKSPACE}/Build"
          cd    "${GITHUB_WORKSPACE}/Build"
          cmake --version
          cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE="Debug" "${GITHUB_WORKSPACE}/Build"
          

      - name: Build Project
        run: |
          cmake --build . --parallel --config "Debug" --target "NanoTest"
