name: Build

on:
  push:
    branches: [master]

jobs:
#  macOS:
#    runs-on: macOS-latest
#
#    strategy:
#      matrix:
#        config: ['Debug', 'Release']
#
#    steps:
#      - name: Checkout Project
#        uses: actions/checkout@v2
#
#      - name: Build Project
#        run: |
#          xcodebuild build                                       \
#            -project NanoTest/Project/NanoTest.xcodeproj         \
#            -scheme      "NanoTest_macOS - ${{ matrix.config }}" \
#            -destination "generic/platform=macOS"                \
#            -parallelizeTargets                                  \
#            -enableAddressSanitizer           YES                \
#            -enableUndefinedBehaviorSanitizer YES                \
#            Nano="${GITHUB_WORKSPACE}"                           \
#            SYMROOT="${GITHUB_WORKSPACE}/Build" | xcpretty
#
#      - name: Run Tests
#        run: |
#          cd Build
#          "./${{ matrix.config }}/NanoTest_macOS" -d yes
#
#
#
#  iOS:
#    runs-on: macOS-latest
#
#    strategy:
#      matrix:
#        config: ['Debug', 'Release']
#
#    steps:
#      - name: Checkout Project
#        uses: actions/checkout@v2
#
#      - name: Build Project
#        run: |
#          xcodebuild build                                       \
#            -project Library/Project/Nano.xcodeproj              \
#            -scheme      "Nano_iOS - ${{ matrix.config }}"       \
#            -destination "generic/platform=iOS"                  \
#            -parallelizeTargets                                  \
#            Nano="${GITHUB_WORKSPACE}"                           \
#            SYMROOT="${GITHUB_WORKSPACE}/Build" | xcpretty
#
#
#
#  tvOS:
#    runs-on: macOS-latest
#
#    strategy:
#      matrix:
#        config: ['Debug', 'Release']
#
#    steps:
#      - name: Checkout Project
#        uses: actions/checkout@v2
#
#      - name: Build Project
#        run: |
#          xcodebuild build                                       \
#            -project Library/Project/Nano.xcodeproj              \
#            -scheme      "Nano_tvOS - ${{ matrix.config }}"      \
#            -destination "generic/platform=tvOS"                 \
#            -parallelizeTargets                                  \
#            Nano="${GITHUB_WORKSPACE}"                           \
#            SYMROOT="${GITHUB_WORKSPACE}/Build" | xcpretty
#
#
#
#  Linux:
#    runs-on: ubuntu-latest
#
#    strategy:
#      matrix:
#        config: ['Debug', 'Release']
#
#    steps:
#      - name: Checkout Project
#        uses: actions/checkout@v2
#
#      - name: Prepare Build
#        run: |
#          mkdir Build
#          cd    Build
#          cmake -G "Unix Makefiles"                   \
#            -DCMAKE_BUILD_TYPE="${{ matrix.config }}" \
#            "${GITHUB_WORKSPACE}"
#
#      - name: Build Project
#        run: |
#          cd Build
#          make -j2 "NanoTest"
#
#      - name: Run Tests
#        run: |
#          cd Build
#          ./NanoTest/Project/NanoTest -d yes
#
#
#
#  Android:
#    runs-on: ubuntu-latest
#
#    strategy:
#      matrix:
#        config: ['Debug', 'Release']
#
#    steps:
#      - name: Checkout Project
#        uses: actions/checkout@v2
#
#      - name: Prepare NDK
#        run: |
#          sudo mkdir -p             /usr/local/lib/android/sdk/ndk
#          sudo chmod -R 777         /usr/local/lib/android/sdk/ndk
#          sudo chown -R $USER:$USER /usr/local/lib/android/sdk/ndk
#
#      - name: Cache NDK
#        id: ndk-cache
#        uses: actions/cache@v2
#        with:
#          path: /usr/local/lib/android/sdk/ndk
#          key: ndk-cache-21.0.6113669-v2
#
#      - name: Install NDK
#        if: steps.ndk-cache.outputs.cache-hit != 'true'
#        run: echo "y" | sudo /usr/local/lib/android/sdk/tools/bin/sdkmanager --install "ndk;21.0.6113669" | grep -v = || true
#
#      - name: Prepare Build
#        run: |
#          mkdir Build
#          cd    Build
#          cmake -G "Unix Makefiles"                       \
#            -DANDROID_ABI=arm64-v8a                       \
#            -DANDROID_NATIVE_API_LEVEL=26                 \
#            -DCMAKE_TOOLCHAIN_FILE="/usr/local/lib/android/sdk/ndk/21.0.6113669/build/cmake/android.toolchain.cmake" \
#            -DCMAKE_BUILD_TYPE="${{ matrix.config }}"     \
#            "${GITHUB_WORKSPACE}"
#
#      - name: Build Project
#        run: |
#          cd Build
#          make -j2 "NanoTest"



  Windows:
    runs-on: windows-latest

    strategy:
      matrix:
        config: ['Debug', 'Release']

    steps:
      - name: Checkout Project
        uses: actions/checkout@v2

      - name: Prepare Build
        run: |
          mkdir Build
          cd    Build
          cmake -G "Visual Studio 16 2019" -DCMAKE_BUILD_TYPE="${{ matrix.config }}" "$env:GITHUB_WORKSPACE"

      - name: Build Project
        run: |
          cd Build
          cmake --build . --parallel --config "${{ matrix.config }}" --target NanoTest

      - name: Run Tests
        run: |
          cd Build
          .\NanoTest\Project\${{ matrix.config }}\NanoTest.exe -d yes


