name: Build

on:
  push:
    branches: [master]

jobs:
  Darwin:
    runs-on: macOS-latest

    strategy:
      matrix:
        run-config:
          - { scheme: 'NanoTest_macOS - Debug',   destination: 'generic/platform=macOS' }
#          - { scheme: 'NanoTest_macOS - Release', destination: 'generic/platform=macOS' }
#          - { scheme: 'NanoTest_iOS - Debug',     destination: 'generic/platform=iOS' }
#          - { scheme: 'NanoTest_iOS - Release',   destination: 'generic/platform=iOS' }
#          - { scheme: 'NanoTest_tvOS - Debug',    destination: 'generic/platform=tvOS' }
#          - { scheme: 'NanoTest_tvOS - Release',  destination: 'generic/platform=tvOS' }

    steps:
      - name: Checkout Project
        uses: actions/checkout@v2

      - name: Build Project
        run: |
          xcodebuild build                                         \
            -project NanoTest/Project/NanoTest.xcodeproj           \
            -scheme      '${{ matrix.run-config['scheme'] }}'      \
            -destination '${{ matrix.run-config['destination'] }}' \
            -parallelizeTargets                                    \
            -enableAddressSanitizer           YES                  \
            -enableUndefinedBehaviorSanitizer YES                  \
            Nano="${GITHUB_WORKSPACE}"                             \
            SYMROOT="${GITHUB_WORKSPACE}/Build" | xcpretty

      - name: Run Tests
        run: find "$GITHUB_WORKSPACE" -name NanoTest_macOS




  Linux:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        run-config:
          - { config: 'Debug' }
          - { config: 'Release' }

    steps:
      - name: Checkout Project
        uses: actions/checkout@v2

      - name: Prepare Build
        run: |
          mkdir Build
          cd    Build
          cmake -G "Unix Makefiles"                                   \
            -DCMAKE_BUILD_TYPE="'${{ matrix.run-config['config'] }}'" \
            "${GITHUB_WORKSPACE}"
          
      - name: Build Project
        run: |
          cd Build
          make -j2 "NanoTest"
          
      - name: Run Tests
        run: |
          cd Build
          ./NanoTest/Project/NanoTest -d 1 Nano/TFileHandle/OpenTemporary/Named
